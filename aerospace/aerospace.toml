# Aerospace Window Manager Configuration
# https://github.com/nikitabobko/AeroSpace
# Optimized for German Mac keyboard using Meh key (Space when held = Shift+Ctrl+Alt)

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Main Settings
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# Default layout for new workspaces
default-root-container-layout = 'tiles'
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse settings
# Disable focus follows mouse
on-focus-changed = []

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Gaps configuration
# Handle different top gaps for built-in display (notch) vs external displays (Sketchybar)
[gaps]
inner.horizontal = 2
inner.vertical = 2
outer.bottom = 2
outer.top = [
  { monitor."built-in" = 10 },  # MacBook display with notch
  { monitor."main" = 36 },      # Main external display with Sketchybar
  50                            # Default for other external displays
]
outer.left = 0
outer.right = 0

# Window detection customizations
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
if.window-title-regex-substring = 'Copy|Move|Delete'
run = 'layout floating'

# Ensure Ghostty windows are tiled
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'layout tiling'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# https://nikitabobko.github.io/AeroSpace/commands#enable
ctrl-alt-shift-e = 'enable toggle'

# alt-shift-ctrl-e = 'enable on'
# alt-shift-ctrl-d = 'enable off'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-period = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-shift-h = 'focus left'
ctrl-alt-shift-j = 'focus down'
ctrl-alt-shift-k = 'focus up'
ctrl-alt-shift-l = 'focus right'


# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
# alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
alt-b = 'workspace B'
# alt-o = 'workspace O' # geht nicht wegen ö für lily
alt-m = 'workspace M'
# alt-n = 'workspace N'
alt-c = 'workspace C'
alt-p = 'workspace P'
alt-t = 'workspace T'
alt-v = 'workspace V'
alt-w = 'workspace W'
alt-y = 'workspace Y'
alt-z = 'workspace Z' # eigentlich y aber aerospace benutzt qwerty

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
# alt-shift-6 = 'move-node-to-workspace 6'
# alt-shift-7 = 'move-node-to-workspace 7'
# alt-shift-8 = 'move-node-to-workspace 8'
# alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-b = 'move-node-to-workspace B'
# alt-shift-e = 'move-node-to-workspace E'
alt-shift-m = 'move-node-to-workspace M'
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
alt-shift-c = 'move-node-to-workspace C'
alt-shift-p = 'move-node-to-workspace P'
alt-shift-s = 'move-node-to-workspace S'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-v = 'move-node-to-workspace V'
alt-shift-w = 'move-node-to-workspace W'
alt-shift-y = 'move-node-to-workspace Y'
alt-shift-z = 'move-node-to-workspace Z' # eigentlich y aber aerospace benutzt qwerty

alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
# alt-shift-semicolon = 'mode service'

# alt-shift-r = 'mode resize'
#
# [mode.resize.binding]
# h = 'resize width -150'
# # j = 'resize height +50'
# # k = 'resize height -50'
# l = 'resize width +150'
# b = 'balance-sizes'
#
#
# # See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-alt-shift-ctrl-equal = 'resize smart -150' # da es qwerty ist ist minus = 0 Taste
cmd-alt-shift-ctrl-minus = 'resize smart +150' # da qwerty eingestellt ist ist = die backtick taste
#
# enter = 'mode main'
# esc = 'mode main'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# [mode.service.binding]
# esc = ['reload-config', 'mode main']
# r = ['flatten-workspace-tree', 'mode main'] # reset layout
# #s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
# f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

# alt-shift-h = ['join-with left', 'mode main']
# alt-shift-j = ['join-with down', 'mode main']
# alt-shift-k = ['join-with up', 'mode main']
# alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'TextEdit'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace C"
